pipeline {

agent any
environment {
    VIRTUAL_ENV = 'venv'
}
stages {
    stage('Setup') {
        steps {
            script {
                if (!fileExists("${env.WORKSPACE}/${VIRTUAL_ENV}")) {
                    bat "python3 -m venv venv"
                }
                bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && pip install -r requirements.txt"
            }
        }
    }
    stage('Lint') {
        steps {
            script {
                bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && flake8 app.py"
            }
        }
    }
    stage('Security Scan') {
            steps {
                script {
                    // Security scan using Bandit
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && bandit -r ."
                }
            }
        }
    stage('Test') {
        steps {
            script {
                bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && pytest"
            }
        }
    }
    stage('Coverage') {
            steps {
                script {
                    //run tests with coverage
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && coverage run -m pytest"
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && coverage report"
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && coverage html" // Generates an HTML report
                }
            }
        }
    stage('Deploy') {
        steps {
            script {
                // Deployment logic, e.g., pushing to a remote server
                echo "Deploying application..."
            }
        }
    }
}
post {
    always {
        cleanWs()
    }
}

}